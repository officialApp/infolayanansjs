{"version":3,"sources":["webpack:///./node_modules/@firebase/remote-config/dist/index.cjs.js","webpack:///./node_modules/@firebase/performance/dist/index.cjs.js","webpack:///./node_modules/firebase/dist/index.cjs.js"],"names":["_interopDefault","ex","Object","defineProperty","exports","value","firebase","_a","tslib","util","logger","component","CachingClient","client","storage","storageCache","this","prototype","isCachedDataFresh","cacheMaxAgeMillis","lastSuccessfulFetchTimestampMillis","debug","cacheAgeMillis","Date","now","fetch","request","__awaiter","lastSuccessfulFetchResponse","response","storageOperations","__generator","_b","label","Promise","all","getLastSuccessfulFetchTimestampMillis","getLastSuccessfulFetchResponse","sent","eTag","setLastSuccessfulFetchTimestampMillis","status","push","setLastSuccessfulFetchResponse","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","ErrorFactory","hasErrorCode","e","errorCode","FirebaseError","code","indexOf","getUserLanguage","navigatorLanguage","navigator","languages","language","RestClient","firebaseInstallations","sdkVersion","namespace","projectId","apiKey","appId","installationId","installationToken","urlBase","url","headers","requestBody","options","fetchPromise","timeoutPromise","originalError_1","responseEtag","config","state","responseBody","originalError_2","getId","getToken","window","FIREBASE_REMOTE_CONFIG_URL_BASE","sdk_version","app_instance_id","app_instance_id_token","app_id","language_code","method","body","JSON","stringify","_resolve","reject","signal","addEventListener","error","Error","name","trys","race","create","originalErrorMessage","message","get","undefined","json","httpStatus","RemoteConfigAbortSignal","listeners","listener","abort","forEach","DEFAULT_VALUE_FOR_BOOLEAN","DEFAULT_VALUE_FOR_STRING","DEFAULT_VALUE_FOR_NUMBER","BOOLEAN_TRUTHY_VALUES","Value","_source","_value","asString","asBoolean","toLowerCase","asNumber","num","Number","isNaN","getSource","DEFAULT_FETCH_TIMEOUT_MILLIS","DEFAULT_CACHE_MAX_AGE_MILLIS","RemoteConfig","app","_client","_storageCache","_storage","_logger","_isInitializationComplete","settings","fetchTimeoutMillis","minimumFetchIntervalMillis","defaultConfig","setLogLevel","logLevel","LogLevel","DEBUG","SILENT","ERROR","enumerable","configurable","getLastFetchStatus","activate","activeConfigEtag","getActiveConfigEtag","setActiveConfig","setActiveConfigEtag","ensureInitialized","_this","_initializePromise","loadFromStorage","then","abortSignal","e_1","lastFetchStatus","setTimeout","setLastFetchStatus","fetchAndActivate","getAll","getAllKeys","getActiveConfig","reduce","allConfigs","key","getValue","getBoolean","getNumber","getString","activeConfig","String","obj1","obj2","keys","__assign","toFirebaseError","event","originalError","target","APP_NAMESPACE_STORE","DB_NAME","DB_VERSION","openDatabase","resolve","indexedDB","open","onerror","onsuccess","result","onupgradeneeded","db","oldVersion","createObjectStore","keyPath","Storage","appName","openDbPromise","set","timestamp","etag","getThrottleMetadata","setThrottleMetadata","metadata","deleteThrottleMetadata","delete","transaction","objectStore","compositeKey","createCompositeKey","put","join","StorageCache","lastFetchStatusPromise","lastSuccessfulFetchTimestampMillisPromise","activeConfigPromise","timestampMillis","INTERVAL_MILLIS","BACKOFF_FACTOR","MAX_VALUE_MILLIS","RANDOM_FACTOR","calculateBackoffMillis","backoffCount","currBaseValue","Math","pow","randomWait","round","random","min","setAbortableTimeout","throttleEndTimeMillis","backoffMillis","max","timeout","clearTimeout","isRetriableError","RetryingClient","throttleMetadata","attemptFetch","version","registerRemoteConfig","firebaseInstance","remoteConfigFactory","container","getProvider","getImmediate","installations","logger$1","Logger","restClient","SDK_VERSION","retryingClient","cachingClient","remoteConfigInstance","INTERNAL","registerComponent","Component","setMultipleInstances","registerVersion","apiInstance","windowInstance","settingsServiceInstance","TRACE_START_MARK_PREFIX","TRACE_STOP_MARK_PREFIX","TRACE_MEASURE_PREFIX","OOB_TRACE_PAGE_LOAD_PREFIX","FIRST_PAINT_COUNTER_NAME","FIRST_CONTENTFUL_PAINT_COUNTER_NAME","FIRST_INPUT_DELAY_COUNTER_NAME","CONFIG_LOCAL_STORAGE_KEY","CONFIG_EXPIRY_LOCAL_STORAGE_KEY","SERVICE","SERVICE_NAME","Api","performance","PerformanceObserver","windowLocation","location","document","cookieEnabled","localStorage","perfMetrics","onFirstInputDelay","getUrl","href","split","mark","measure","measureName","mark1","mark2","getEntriesByType","type","getEntriesByName","getTimeOrigin","timeOrigin","timing","navigationStart","requiredApisAvailable","setupObserver","entryType","callback","observer","list","_i","getEntries","length","entry","observe","entryTypes","getInstance","setupApi","mergeStrings","part1","part2","sizeDiff","resultArray","i","charAt","iid","VisibilityState","SettingsService","instrumentationEnabled","dataCollectionEnabled","loggingEnabled","tracesSamplingRate","networkRequestsSamplingRate","logEndPointUrl","flTransportEndpointUrl","transportKey","logSource","logTraceAfterSampling","logNetworkAfterSampling","configTimeToLive","getAppId","firebaseAppInstance","getProjectId","getApiKey","getFlTransportFullUrl","concat","getIidPromise","iidPromise","installationsService","iidVal","getIid","getAuthTokenPromise","authTokenPromise","authTokenVal","RESERVED_ATTRIBUTE_PREFIXES","ATTRIBUTE_FORMAT_REGEX","RegExp","MAX_ATTRIBUTE_NAME_LENGTH","MAX_ATTRIBUTE_VALUE_LENGTH","getServiceWorkerStatus","serviceWorker","controller","getVisibilityState","visibilityState","VISIBLE","HIDDEN","UNKNOWN","getEffectiveConnectionType","navigatorConnection","connection","effectiveType","isValidCustomAttributeName","matchesReservedPrefix","some","prefix","startsWith","match","isValidCustomAttributeValue","consoleLogger","INFO","REMOTE_CONFIG_SDK_VERSION","DEFAULT_CONFIGS","FIS_AUTH_PREFIX","getConfig","getStoredConfig","processConfig","getRemoteConfig","storeConfig","expiryString","getItem","configValid","configStringified","configResponse","parse","setItem","COULD_NOT_GET_CONFIG_MSG","authToken","configEndPoint","Request","Authorization","app_version","ok","catch","info","entries","fpr_enabled","fpr_log_source","fpr_log_endpoint_url","fpr_log_transport_key","fpr_vc_network_request_sampling_rate","fpr_vc_trace_sampling_rate","shouldLogAfterSampling","expiry","samplingRate","initializationPromise","initializationStatus","getInitializationPromise","initializePerf","isPerfInitialized","getDocumentReadyComplete","changeInitializationStatus","readyState","handler_1","removeEventListener","DEFAULT_SEND_INTERVAL_MS","INITIAL_SEND_TIME_DELAY_MS","DEFAULT_REMAINING_TRIES","remainingTries","queue","isTransportSetup","setupTransportService","processQueue","timeOffset","dispatchQueueEvents","staged","__spreadArrays","log_event","map","evt","source_extension_json_proto3","event_time_ms","eventTime","data","request_time_ms","client_info","client_type","js_client_info","log_source","sendEventsToFl","postToFlEndpoint","res","transportWait","nextRequestWaitMillis","requestOffset","logResponseDetails","Array","isArray","responseAction","flTransportFullUrl","addToQueue","transportHandler","serializer","args","arguments","apply","sendLog","resource","resourceType","logTrace","trace","settingsService","isAuto","sendTraceLog","logNetworkRequest","networkRequest","networkRequestUrl","logEndpointUrl","flEndpointUrl","serializeNetworkRequest","serializeTrace","networkRequestMetric","http_method","httpMethod","http_response_code","response_payload_bytes","responsePayloadBytes","client_start_time_us","startTimeUs","time_to_response_initiated_us","timeToResponseInitiatedUs","time_to_response_completed_us","timeToResponseCompletedUs","perfMetric","application_info","getApplicationInfo","network_request_metric","traceMetric","is_auto","duration_us","durationUs","counters","customAttributes","getAttributes","custom_attributes","trace_metric","google_app_id","web_app_info","page_url","service_worker_status","visibility_state","effective_connection_type","application_process_state","MAX_METRIC_NAME_LENGTH","RESERVED_AUTO_PREFIX","oobMetrics","isValidMetricName","traceName","Trace","traceMeasureName","api","randomId","floor","traceStartMark","traceStopMark","traceMeasure","calculateTraceMetrics","start","stop","record","startTime","duration","attributes","metrics","metric","incrementMetric","counter","putMetric","customMetricName","getMetric","putAttribute","attr","isValidName","isValidValue","attributeName","attributeValue","getAttribute","removeAttribute","setStartTime","setDuration","perfMeasureEntries","perfMeasureEntry","createOobTrace","navigationTimings","paintTimings","firstInputDelay","route","timeOriginUs","domInteractive","domContentLoadedEventEnd","loadEventEnd","FIRST_PAINT","FIRST_CONTENTFUL_PAINT","firstPaint","find","paintObject","firstContentfulPaint","createUserTimingTrace","createNetworkRequestEntry","performanceEntry","responseStart","responseEnd","transferSize","FID_WAIT_TIME_MS","setupOobResources","setupOobTraces","setupNetworkRequests","setupUserTimingTraces","resources","resources_1","timeoutId_1","fid","measures","measures_1","substring","PerformanceController","val","DEFAULT_ENTRY_NAME","registerPerformance","instance","factoryMethod","name$1","version$1","console","warn","module"],"mappings":"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","file":"js/page-afterauth~page-googlelogin~page-instagram-blast~page-instagram-index~page-lembur_generate~page-~da02304d.54bb5e8d.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\nrequire('@firebase/installations');\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\nvar logger = require('@firebase/logger');\nvar component = require('@firebase/component');\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements the {@link RemoteConfigClient} abstraction with success response caching.\r\n *\r\n * <p>Comparable to the browser's Cache API for responses, but the Cache API requires a Service\r\n * Worker, which requires HTTPS, which would significantly complicate SDK installation. Also, the\r\n * Cache API doesn't support matching entries by time.\r\n */\r\nvar CachingClient = /** @class */ (function () {\r\n    function CachingClient(client, storage, storageCache, logger) {\r\n        this.client = client;\r\n        this.storage = storage;\r\n        this.storageCache = storageCache;\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * Returns true if the age of the cached fetched configs is less than or equal to\r\n     * {@link Settings#minimumFetchIntervalInSeconds}.\r\n     *\r\n     * <p>This is comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the\r\n     * native Fetch API.\r\n     *\r\n     * <p>Visible for testing.\r\n     */\r\n    CachingClient.prototype.isCachedDataFresh = function (cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis) {\r\n        // Cache can only be fresh if it's populated.\r\n        if (!lastSuccessfulFetchTimestampMillis) {\r\n            this.logger.debug('Config fetch cache check. Cache unpopulated.');\r\n            return false;\r\n        }\r\n        // Calculates age of cache entry.\r\n        var cacheAgeMillis = Date.now() - lastSuccessfulFetchTimestampMillis;\r\n        var isCachedDataFresh = cacheAgeMillis <= cacheMaxAgeMillis;\r\n        this.logger.debug('Config fetch cache check.' +\r\n            (\" Cache age millis: \" + cacheAgeMillis + \".\") +\r\n            (\" Cache max age millis (minimumFetchIntervalMillis setting): \" + cacheMaxAgeMillis + \".\") +\r\n            (\" Is cache hit: \" + isCachedDataFresh + \".\"));\r\n        return isCachedDataFresh;\r\n    };\r\n    CachingClient.prototype.fetch = function (request) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var _a, lastSuccessfulFetchTimestampMillis, lastSuccessfulFetchResponse, response, storageOperations;\r\n            return tslib.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.storage.getLastSuccessfulFetchTimestampMillis(),\r\n                            this.storage.getLastSuccessfulFetchResponse()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), lastSuccessfulFetchTimestampMillis = _a[0], lastSuccessfulFetchResponse = _a[1];\r\n                        // Exits early on cache hit.\r\n                        if (lastSuccessfulFetchResponse &&\r\n                            this.isCachedDataFresh(request.cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis)) {\r\n                            return [2 /*return*/, lastSuccessfulFetchResponse];\r\n                        }\r\n                        // Deviates from pure decorator by not honoring a passed ETag since we don't have a public API\r\n                        // that allows the caller to pass an ETag.\r\n                        request.eTag =\r\n                            lastSuccessfulFetchResponse && lastSuccessfulFetchResponse.eTag;\r\n                        return [4 /*yield*/, this.client.fetch(request)];\r\n                    case 2:\r\n                        response = _b.sent();\r\n                        storageOperations = [\r\n                            // Uses write-through cache for consistency with synchronous public API.\r\n                            this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())\r\n                        ];\r\n                        if (response.status === 200) {\r\n                            // Caches response only if it has changed, ie non-304 responses.\r\n                            storageOperations.push(this.storage.setLastSuccessfulFetchResponse(response));\r\n                        }\r\n                        return [4 /*yield*/, Promise.all(storageOperations)];\r\n                    case 3:\r\n                        _b.sent();\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return CachingClient;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"registration-window\" /* REGISTRATION_WINDOW */] = 'Undefined window object. This SDK only supports usage in a browser environment.',\r\n    _a[\"registration-project-id\" /* REGISTRATION_PROJECT_ID */] = 'Undefined project identifier. Check Firebase app initialization.',\r\n    _a[\"registration-api-key\" /* REGISTRATION_API_KEY */] = 'Undefined API key. Check Firebase app initialization.',\r\n    _a[\"registration-app-id\" /* REGISTRATION_APP_ID */] = 'Undefined app identifier. Check Firebase app initialization.',\r\n    _a[\"storage-open\" /* STORAGE_OPEN */] = 'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"storage-get\" /* STORAGE_GET */] = 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"storage-set\" /* STORAGE_SET */] = 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"storage-delete\" /* STORAGE_DELETE */] = 'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"fetch-client-network\" /* FETCH_NETWORK */] = 'Fetch client failed to connect to a network. Check Internet connection.' +\r\n        ' Original error: {$originalErrorMessage}.',\r\n    _a[\"fetch-timeout\" /* FETCH_TIMEOUT */] = 'The config fetch request timed out. ' +\r\n        ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.',\r\n    _a[\"fetch-throttle\" /* FETCH_THROTTLE */] = 'The config fetch request timed out while in an exponential backoff state.' +\r\n        ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.' +\r\n        ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',\r\n    _a[\"fetch-client-parse\" /* FETCH_PARSE */] = 'Fetch client could not parse response.' +\r\n        ' Original error: {$originalErrorMessage}.',\r\n    _a[\"fetch-status\" /* FETCH_STATUS */] = 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',\r\n    _a);\r\nvar ERROR_FACTORY = new util.ErrorFactory('remoteconfig' /* service */, 'Remote Config' /* service name */, ERROR_DESCRIPTION_MAP);\r\n// Note how this is like typeof/instanceof, but for ErrorCode.\r\nfunction hasErrorCode(e, errorCode) {\r\n    return e instanceof util.FirebaseError && e.code.indexOf(errorCode) !== -1;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Attempts to get the most accurate browser language setting.\r\n *\r\n * <p>Adapted from getUserLanguage in packages/auth/src/utils.js for TypeScript.\r\n *\r\n * <p>Defers default language specification to server logic for consistency.\r\n *\r\n * @param navigatorLanguage Enables tests to override read-only {@link NavigatorLanguage}.\r\n */\r\nfunction getUserLanguage(navigatorLanguage) {\r\n    if (navigatorLanguage === void 0) { navigatorLanguage = navigator; }\r\n    return (\r\n    // Most reliable, but only supported in Chrome/Firefox.\r\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\r\n        // Supported in most browsers, but returns the language of the browser\r\n        // UI, not the language set in browser settings.\r\n        navigatorLanguage.language\r\n    // Polyfill otherwise.\r\n    );\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements the Client abstraction for the Remote Config REST API.\r\n */\r\nvar RestClient = /** @class */ (function () {\r\n    function RestClient(firebaseInstallations, sdkVersion, namespace, projectId, apiKey, appId) {\r\n        this.firebaseInstallations = firebaseInstallations;\r\n        this.sdkVersion = sdkVersion;\r\n        this.namespace = namespace;\r\n        this.projectId = projectId;\r\n        this.apiKey = apiKey;\r\n        this.appId = appId;\r\n    }\r\n    /**\r\n     * Fetches from the Remote Config REST API.\r\n     *\r\n     * @throws a {@link ErrorCode.FETCH_NETWORK} error if {@link GlobalFetch#fetch} can't\r\n     * connect to the network.\r\n     * @throws a {@link ErrorCode.FETCH_PARSE} error if {@link Response#json} can't parse the\r\n     * fetch response.\r\n     * @throws a {@link ErrorCode.FETCH_STATUS} error if the service returns an HTTP error status.\r\n     */\r\n    RestClient.prototype.fetch = function (request) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var _a, installationId, installationToken, urlBase, url, headers, requestBody, options, fetchPromise, timeoutPromise, response, originalError_1, errorCode, status, responseEtag, config, state, responseBody, originalError_2;\r\n            return tslib.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.firebaseInstallations.getId(),\r\n                            this.firebaseInstallations.getToken()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), installationId = _a[0], installationToken = _a[1];\r\n                        urlBase = window.FIREBASE_REMOTE_CONFIG_URL_BASE ||\r\n                            'https://firebaseremoteconfig.googleapis.com';\r\n                        url = urlBase + \"/v1/projects/\" + this.projectId + \"/namespaces/\" + this.namespace + \":fetch?key=\" + this.apiKey;\r\n                        headers = {\r\n                            'Content-Type': 'application/json',\r\n                            'Content-Encoding': 'gzip',\r\n                            // Deviates from pure decorator by not passing max-age header since we don't currently have\r\n                            // service behavior using that header.\r\n                            'If-None-Match': request.eTag || '*'\r\n                        };\r\n                        requestBody = {\r\n                            /* eslint-disable camelcase */\r\n                            sdk_version: this.sdkVersion,\r\n                            app_instance_id: installationId,\r\n                            app_instance_id_token: installationToken,\r\n                            app_id: this.appId,\r\n                            language_code: getUserLanguage()\r\n                            /* eslint-enable camelcase */\r\n                        };\r\n                        options = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: JSON.stringify(requestBody)\r\n                        };\r\n                        fetchPromise = fetch(url, options);\r\n                        timeoutPromise = new Promise(function (_resolve, reject) {\r\n                            // Maps async event listener to Promise API.\r\n                            request.signal.addEventListener(function () {\r\n                                // Emulates https://heycam.github.io/webidl/#aborterror\r\n                                var error = new Error('The operation was aborted.');\r\n                                error.name = 'AbortError';\r\n                                reject(error);\r\n                            });\r\n                        });\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        _b.trys.push([2, 5, , 6]);\r\n                        return [4 /*yield*/, Promise.race([fetchPromise, timeoutPromise])];\r\n                    case 3:\r\n                        _b.sent();\r\n                        return [4 /*yield*/, fetchPromise];\r\n                    case 4:\r\n                        response = _b.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        originalError_1 = _b.sent();\r\n                        errorCode = \"fetch-client-network\" /* FETCH_NETWORK */;\r\n                        if (originalError_1.name === 'AbortError') {\r\n                            errorCode = \"fetch-timeout\" /* FETCH_TIMEOUT */;\r\n                        }\r\n                        throw ERROR_FACTORY.create(errorCode, {\r\n                            originalErrorMessage: originalError_1.message\r\n                        });\r\n                    case 6:\r\n                        status = response.status;\r\n                        responseEtag = response.headers.get('ETag') || undefined;\r\n                        if (!(response.status === 200)) return [3 /*break*/, 11];\r\n                        responseBody = void 0;\r\n                        _b.label = 7;\r\n                    case 7:\r\n                        _b.trys.push([7, 9, , 10]);\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 8:\r\n                        responseBody = _b.sent();\r\n                        return [3 /*break*/, 10];\r\n                    case 9:\r\n                        originalError_2 = _b.sent();\r\n                        throw ERROR_FACTORY.create(\"fetch-client-parse\" /* FETCH_PARSE */, {\r\n                            originalErrorMessage: originalError_2.message\r\n                        });\r\n                    case 10:\r\n                        config = responseBody['entries'];\r\n                        state = responseBody['state'];\r\n                        _b.label = 11;\r\n                    case 11:\r\n                        // Normalizes based on legacy state.\r\n                        if (state === 'INSTANCE_STATE_UNSPECIFIED') {\r\n                            status = 500;\r\n                        }\r\n                        else if (state === 'NO_CHANGE') {\r\n                            status = 304;\r\n                        }\r\n                        else if (state === 'NO_TEMPLATE' || state === 'EMPTY_CONFIG') {\r\n                            // These cases can be fixed remotely, so normalize to safe value.\r\n                            config = {};\r\n                        }\r\n                        // Normalize to exception-based control flow for non-success cases.\r\n                        // Encapsulates HTTP specifics in this class as much as possible. Status is still the best for\r\n                        // differentiating success states (200 from 304; the state body param is undefined in a\r\n                        // standard 304).\r\n                        if (status !== 304 && status !== 200) {\r\n                            throw ERROR_FACTORY.create(\"fetch-status\" /* FETCH_STATUS */, {\r\n                                httpStatus: status\r\n                            });\r\n                        }\r\n                        return [2 /*return*/, { status: status, eTag: responseEtag, config: config }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RestClient;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Shims a minimal AbortSignal.\r\n *\r\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\r\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\r\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\r\n * swapped out if/when we do.\r\n */\r\nvar RemoteConfigAbortSignal = /** @class */ (function () {\r\n    function RemoteConfigAbortSignal() {\r\n        this.listeners = [];\r\n    }\r\n    RemoteConfigAbortSignal.prototype.addEventListener = function (listener) {\r\n        this.listeners.push(listener);\r\n    };\r\n    RemoteConfigAbortSignal.prototype.abort = function () {\r\n        this.listeners.forEach(function (listener) { return listener(); });\r\n    };\r\n    return RemoteConfigAbortSignal;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_VALUE_FOR_BOOLEAN = false;\r\nvar DEFAULT_VALUE_FOR_STRING = '';\r\nvar DEFAULT_VALUE_FOR_NUMBER = 0;\r\nvar BOOLEAN_TRUTHY_VALUES = ['1', 'true', 't', 'yes', 'y', 'on'];\r\nvar Value = /** @class */ (function () {\r\n    function Value(_source, _value) {\r\n        if (_value === void 0) { _value = DEFAULT_VALUE_FOR_STRING; }\r\n        this._source = _source;\r\n        this._value = _value;\r\n    }\r\n    Value.prototype.asString = function () {\r\n        return this._value;\r\n    };\r\n    Value.prototype.asBoolean = function () {\r\n        if (this._source === 'static') {\r\n            return DEFAULT_VALUE_FOR_BOOLEAN;\r\n        }\r\n        return BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase()) >= 0;\r\n    };\r\n    Value.prototype.asNumber = function () {\r\n        if (this._source === 'static') {\r\n            return DEFAULT_VALUE_FOR_NUMBER;\r\n        }\r\n        var num = Number(this._value);\r\n        if (isNaN(num)) {\r\n            num = DEFAULT_VALUE_FOR_NUMBER;\r\n        }\r\n        return num;\r\n    };\r\n    Value.prototype.getSource = function () {\r\n        return this._source;\r\n    };\r\n    return Value;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_FETCH_TIMEOUT_MILLIS = 60 * 1000; // One minute\r\nvar DEFAULT_CACHE_MAX_AGE_MILLIS = 12 * 60 * 60 * 1000; // Twelve hours.\r\n/**\r\n * Encapsulates business logic mapping network and storage dependencies to the public SDK API.\r\n *\r\n * See {@link https://github.com/FirebasePrivate/firebase-js-sdk/blob/master/packages/firebase/index.d.ts|interface documentation} for method descriptions.\r\n */\r\nvar RemoteConfig = /** @class */ (function () {\r\n    function RemoteConfig(\r\n    // Required by FirebaseServiceFactory interface.\r\n    app, \r\n    // JS doesn't support private yet\r\n    // (https://github.com/tc39/proposal-class-fields#private-fields), so we hint using an\r\n    // underscore prefix.\r\n    _client, _storageCache, _storage, _logger) {\r\n        this.app = app;\r\n        this._client = _client;\r\n        this._storageCache = _storageCache;\r\n        this._storage = _storage;\r\n        this._logger = _logger;\r\n        // Tracks completion of initialization promise.\r\n        this._isInitializationComplete = false;\r\n        this.settings = {\r\n            fetchTimeoutMillis: DEFAULT_FETCH_TIMEOUT_MILLIS,\r\n            minimumFetchIntervalMillis: DEFAULT_CACHE_MAX_AGE_MILLIS\r\n        };\r\n        this.defaultConfig = {};\r\n    }\r\n    // Based on packages/firestore/src/util/log.ts but not static because we need per-instance levels\r\n    // to differentiate 2p and 3p use-cases.\r\n    RemoteConfig.prototype.setLogLevel = function (logLevel) {\r\n        switch (logLevel) {\r\n            case 'debug':\r\n                this._logger.logLevel = logger.LogLevel.DEBUG;\r\n                break;\r\n            case 'silent':\r\n                this._logger.logLevel = logger.LogLevel.SILENT;\r\n                break;\r\n            default:\r\n                this._logger.logLevel = logger.LogLevel.ERROR;\r\n        }\r\n    };\r\n    Object.defineProperty(RemoteConfig.prototype, \"fetchTimeMillis\", {\r\n        get: function () {\r\n            return this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RemoteConfig.prototype, \"lastFetchStatus\", {\r\n        get: function () {\r\n            return this._storageCache.getLastFetchStatus() || 'no-fetch-yet';\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    RemoteConfig.prototype.activate = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var _a, lastSuccessfulFetchResponse, activeConfigEtag;\r\n            return tslib.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this._storage.getLastSuccessfulFetchResponse(),\r\n                            this._storage.getActiveConfigEtag()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), lastSuccessfulFetchResponse = _a[0], activeConfigEtag = _a[1];\r\n                        if (!lastSuccessfulFetchResponse ||\r\n                            !lastSuccessfulFetchResponse.config ||\r\n                            !lastSuccessfulFetchResponse.eTag ||\r\n                            lastSuccessfulFetchResponse.eTag === activeConfigEtag) {\r\n                            // Either there is no successful fetched config, or is the same as current active\r\n                            // config.\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        return [4 /*yield*/, Promise.all([\r\n                                this._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config),\r\n                                this._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)\r\n                            ])];\r\n                    case 2:\r\n                        _b.sent();\r\n                        return [2 /*return*/, true];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RemoteConfig.prototype.ensureInitialized = function () {\r\n        var _this = this;\r\n        if (!this._initializePromise) {\r\n            this._initializePromise = this._storageCache\r\n                .loadFromStorage()\r\n                .then(function () {\r\n                _this._isInitializationComplete = true;\r\n            });\r\n        }\r\n        return this._initializePromise;\r\n    };\r\n    /**\r\n     * @throws a {@link ErrorCode.FETCH_CLIENT_TIMEOUT} if the request takes longer than\r\n     * {@link Settings.fetchTimeoutInSeconds} or\r\n     * {@link DEFAULT_FETCH_TIMEOUT_SECONDS}.\r\n     */\r\n    RemoteConfig.prototype.fetch = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var abortSignal, e_1, lastFetchStatus;\r\n            var _this = this;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        abortSignal = new RemoteConfigAbortSignal();\r\n                        setTimeout(function () { return tslib.__awaiter(_this, void 0, void 0, function () {\r\n                            return tslib.__generator(this, function (_a) {\r\n                                // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\r\n                                abortSignal.abort();\r\n                                return [2 /*return*/];\r\n                            });\r\n                        }); }, this.settings.fetchTimeoutMillis);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 6]);\r\n                        return [4 /*yield*/, this._client.fetch({\r\n                                cacheMaxAgeMillis: this.settings.minimumFetchIntervalMillis,\r\n                                signal: abortSignal\r\n                            })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this._storageCache.setLastFetchStatus('success')];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        lastFetchStatus = hasErrorCode(e_1, \"fetch-throttle\" /* FETCH_THROTTLE */)\r\n                            ? 'throttle'\r\n                            : 'failure';\r\n                        return [4 /*yield*/, this._storageCache.setLastFetchStatus(lastFetchStatus)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        throw e_1;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RemoteConfig.prototype.fetchAndActivate = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.fetch()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, this.activate()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RemoteConfig.prototype.getAll = function () {\r\n        var _this = this;\r\n        return getAllKeys(this._storageCache.getActiveConfig(), this.defaultConfig).reduce(function (allConfigs, key) {\r\n            allConfigs[key] = _this.getValue(key);\r\n            return allConfigs;\r\n        }, {});\r\n    };\r\n    RemoteConfig.prototype.getBoolean = function (key) {\r\n        return this.getValue(key).asBoolean();\r\n    };\r\n    RemoteConfig.prototype.getNumber = function (key) {\r\n        return this.getValue(key).asNumber();\r\n    };\r\n    RemoteConfig.prototype.getString = function (key) {\r\n        return this.getValue(key).asString();\r\n    };\r\n    RemoteConfig.prototype.getValue = function (key) {\r\n        if (!this._isInitializationComplete) {\r\n            this._logger.debug(\"A value was requested for key \\\"\" + key + \"\\\" before SDK initialization completed.\" +\r\n                ' Await on ensureInitialized if the intent was to get a previously activated value.');\r\n        }\r\n        var activeConfig = this._storageCache.getActiveConfig();\r\n        if (activeConfig && activeConfig[key] !== undefined) {\r\n            return new Value('remote', activeConfig[key]);\r\n        }\r\n        else if (this.defaultConfig && this.defaultConfig[key] !== undefined) {\r\n            return new Value('default', String(this.defaultConfig[key]));\r\n        }\r\n        this._logger.debug(\"Returning static value for key \\\"\" + key + \"\\\".\" +\r\n            ' Define a default or remote value if this is unintentional.');\r\n        return new Value('static');\r\n    };\r\n    return RemoteConfig;\r\n}());\r\n/**\r\n * Dedupes and returns an array of all the keys of the received objects.\r\n */\r\nfunction getAllKeys(obj1, obj2) {\r\n    if (obj1 === void 0) { obj1 = {}; }\r\n    if (obj2 === void 0) { obj2 = {}; }\r\n    return Object.keys(tslib.__assign(tslib.__assign({}, obj1), obj2));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Converts an error event associated with a {@link IDBRequest} to a {@link FirebaseError}.\r\n */\r\nfunction toFirebaseError(event, errorCode) {\r\n    var originalError = event.target.error || undefined;\r\n    return ERROR_FACTORY.create(errorCode, {\r\n        originalErrorMessage: originalError && originalError.message\r\n    });\r\n}\r\n/**\r\n * A general-purpose store keyed by app + namespace + {@link\r\n * ProjectNamespaceKeyFieldValue}.\r\n *\r\n * <p>The Remote Config SDK can be used with multiple app installations, and each app can interact\r\n * with multiple namespaces, so this store uses app (ID + name) and namespace as common parent keys\r\n * for a set of key-value pairs. See {@link Storage#createCompositeKey}.\r\n *\r\n * <p>Visible for testing.\r\n */\r\nvar APP_NAMESPACE_STORE = 'app_namespace_store';\r\nvar DB_NAME = 'firebase_remote_config';\r\nvar DB_VERSION = 1;\r\n// Visible for testing.\r\nfunction openDatabase() {\r\n    return new Promise(function (resolve, reject) {\r\n        var request = indexedDB.open(DB_NAME, DB_VERSION);\r\n        request.onerror = function (event) {\r\n            reject(toFirebaseError(event, \"storage-open\" /* STORAGE_OPEN */));\r\n        };\r\n        request.onsuccess = function (event) {\r\n            resolve(event.target.result);\r\n        };\r\n        request.onupgradeneeded = function (event) {\r\n            var db = event.target.result;\r\n            // We don't use 'break' in this switch statement, the fall-through\r\n            // behavior is what we want, because if there are multiple versions between\r\n            // the old version and the current version, we want ALL the migrations\r\n            // that correspond to those versions to run, not only the last one.\r\n            // eslint-disable-next-line default-case\r\n            switch (event.oldVersion) {\r\n                case 0:\r\n                    db.createObjectStore(APP_NAMESPACE_STORE, {\r\n                        keyPath: 'compositeKey'\r\n                    });\r\n            }\r\n        };\r\n    });\r\n}\r\n/**\r\n * Abstracts data persistence.\r\n */\r\nvar Storage = /** @class */ (function () {\r\n    /**\r\n     * @param appId enables storage segmentation by app (ID + name).\r\n     * @param appName enables storage segmentation by app (ID + name).\r\n     * @param namespace enables storage segmentation by namespace.\r\n     */\r\n    function Storage(appId, appName, namespace, openDbPromise) {\r\n        if (openDbPromise === void 0) { openDbPromise = openDatabase(); }\r\n        this.appId = appId;\r\n        this.appName = appName;\r\n        this.namespace = namespace;\r\n        this.openDbPromise = openDbPromise;\r\n    }\r\n    Storage.prototype.getLastFetchStatus = function () {\r\n        return this.get('last_fetch_status');\r\n    };\r\n    Storage.prototype.setLastFetchStatus = function (status) {\r\n        return this.set('last_fetch_status', status);\r\n    };\r\n    // This is comparable to a cache entry timestamp. If we need to expire other data, we could\r\n    // consider adding timestamp to all storage records and an optional max age arg to getters.\r\n    Storage.prototype.getLastSuccessfulFetchTimestampMillis = function () {\r\n        return this.get('last_successful_fetch_timestamp_millis');\r\n    };\r\n    Storage.prototype.setLastSuccessfulFetchTimestampMillis = function (timestamp) {\r\n        return this.set('last_successful_fetch_timestamp_millis', timestamp);\r\n    };\r\n    Storage.prototype.getLastSuccessfulFetchResponse = function () {\r\n        return this.get('last_successful_fetch_response');\r\n    };\r\n    Storage.prototype.setLastSuccessfulFetchResponse = function (response) {\r\n        return this.set('last_successful_fetch_response', response);\r\n    };\r\n    Storage.prototype.getActiveConfig = function () {\r\n        return this.get('active_config');\r\n    };\r\n    Storage.prototype.setActiveConfig = function (config) {\r\n        return this.set('active_config', config);\r\n    };\r\n    Storage.prototype.getActiveConfigEtag = function () {\r\n        return this.get('active_config_etag');\r\n    };\r\n    Storage.prototype.setActiveConfigEtag = function (etag) {\r\n        return this.set('active_config_etag', etag);\r\n    };\r\n    Storage.prototype.getThrottleMetadata = function () {\r\n        return this.get('throttle_metadata');\r\n    };\r\n    Storage.prototype.setThrottleMetadata = function (metadata) {\r\n        return this.set('throttle_metadata', metadata);\r\n    };\r\n    Storage.prototype.deleteThrottleMetadata = function () {\r\n        return this.delete('throttle_metadata');\r\n    };\r\n    Storage.prototype.get = function (key) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            var _this = this;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.openDbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readonly');\r\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n                                var compositeKey = _this.createCompositeKey(key);\r\n                                try {\r\n                                    var request = objectStore.get(compositeKey);\r\n                                    request.onerror = function (event) {\r\n                                        reject(toFirebaseError(event, \"storage-get\" /* STORAGE_GET */));\r\n                                    };\r\n                                    request.onsuccess = function (event) {\r\n                                        var result = event.target.result;\r\n                                        if (result) {\r\n                                            resolve(result.value);\r\n                                        }\r\n                                        else {\r\n                                            resolve(undefined);\r\n                                        }\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    reject(ERROR_FACTORY.create(\"storage-get\" /* STORAGE_GET */, {\r\n                                        originalErrorMessage: e && e.message\r\n                                    }));\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Storage.prototype.set = function (key, value) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            var _this = this;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.openDbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\r\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n                                var compositeKey = _this.createCompositeKey(key);\r\n                                try {\r\n                                    var request = objectStore.put({\r\n                                        compositeKey: compositeKey,\r\n                                        value: value\r\n                                    });\r\n                                    request.onerror = function (event) {\r\n                                        reject(toFirebaseError(event, \"storage-set\" /* STORAGE_SET */));\r\n                                    };\r\n                                    request.onsuccess = function () {\r\n                                        resolve();\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    reject(ERROR_FACTORY.create(\"storage-set\" /* STORAGE_SET */, {\r\n                                        originalErrorMessage: e && e.message\r\n                                    }));\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Storage.prototype.delete = function (key) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            var _this = this;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.openDbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\r\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n                                var compositeKey = _this.createCompositeKey(key);\r\n                                try {\r\n                                    var request = objectStore.delete(compositeKey);\r\n                                    request.onerror = function (event) {\r\n                                        reject(toFirebaseError(event, \"storage-delete\" /* STORAGE_DELETE */));\r\n                                    };\r\n                                    request.onsuccess = function () {\r\n                                        resolve();\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    reject(ERROR_FACTORY.create(\"storage-delete\" /* STORAGE_DELETE */, {\r\n                                        originalErrorMessage: e && e.message\r\n                                    }));\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // Facilitates composite key functionality (which is unsupported in IE).\r\n    Storage.prototype.createCompositeKey = function (key) {\r\n        return [this.appId, this.appName, this.namespace, key].join();\r\n    };\r\n    return Storage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A memory cache layer over storage to support the SDK's synchronous read requirements.\r\n */\r\nvar StorageCache = /** @class */ (function () {\r\n    function StorageCache(storage) {\r\n        this.storage = storage;\r\n    }\r\n    /**\r\n     * Memory-only getters\r\n     */\r\n    StorageCache.prototype.getLastFetchStatus = function () {\r\n        return this.lastFetchStatus;\r\n    };\r\n    StorageCache.prototype.getLastSuccessfulFetchTimestampMillis = function () {\r\n        return this.lastSuccessfulFetchTimestampMillis;\r\n    };\r\n    StorageCache.prototype.getActiveConfig = function () {\r\n        return this.activeConfig;\r\n    };\r\n    /**\r\n     * Read-ahead getter\r\n     */\r\n    StorageCache.prototype.loadFromStorage = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var lastFetchStatusPromise, lastSuccessfulFetchTimestampMillisPromise, activeConfigPromise, lastFetchStatus, lastSuccessfulFetchTimestampMillis, activeConfig;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        lastFetchStatusPromise = this.storage.getLastFetchStatus();\r\n                        lastSuccessfulFetchTimestampMillisPromise = this.storage.getLastSuccessfulFetchTimestampMillis();\r\n                        activeConfigPromise = this.storage.getActiveConfig();\r\n                        return [4 /*yield*/, lastFetchStatusPromise];\r\n                    case 1:\r\n                        lastFetchStatus = _a.sent();\r\n                        if (lastFetchStatus) {\r\n                            this.lastFetchStatus = lastFetchStatus;\r\n                        }\r\n                        return [4 /*yield*/, lastSuccessfulFetchTimestampMillisPromise];\r\n                    case 2:\r\n                        lastSuccessfulFetchTimestampMillis = _a.sent();\r\n                        if (lastSuccessfulFetchTimestampMillis) {\r\n                            this.lastSuccessfulFetchTimestampMillis = lastSuccessfulFetchTimestampMillis;\r\n                        }\r\n                        return [4 /*yield*/, activeConfigPromise];\r\n                    case 3:\r\n                        activeConfig = _a.sent();\r\n                        if (activeConfig) {\r\n                            this.activeConfig = activeConfig;\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Write-through setters\r\n     */\r\n    StorageCache.prototype.setLastFetchStatus = function (status) {\r\n        this.lastFetchStatus = status;\r\n        return this.storage.setLastFetchStatus(status);\r\n    };\r\n    StorageCache.prototype.setLastSuccessfulFetchTimestampMillis = function (timestampMillis) {\r\n        this.lastSuccessfulFetchTimestampMillis = timestampMillis;\r\n        return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis);\r\n    };\r\n    StorageCache.prototype.setActiveConfig = function (activeConfig) {\r\n        this.activeConfig = activeConfig;\r\n        return this.storage.setActiveConfig(activeConfig);\r\n    };\r\n    return StorageCache;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The amount of milliseconds to exponentially increase.\r\n */\r\nvar INTERVAL_MILLIS = 1000;\r\n/**\r\n * The factor to backoff by.\r\n * Should be a number greater than 1.\r\n */\r\nvar BACKOFF_FACTOR = 2;\r\n/**\r\n * The maximum milliseconds to increase to.\r\n *\r\n * <p>Visible for testing\r\n */\r\nvar MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\r\n/**\r\n * The percentage of backoff time to randomize by.\r\n * See\r\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\r\n * for context.\r\n *\r\n * <p>Visible for testing\r\n */\r\nvar RANDOM_FACTOR = 0.5;\r\n/**\r\n * Based on the backoff method from\r\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\r\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\r\n */\r\nfunction calculateBackoffMillis(backoffCount) {\r\n    // Calculates an exponentially increasing value.\r\n    // Deviation: calculates value from count and a constant interval, so we only need to save value\r\n    // and count to restore state.\r\n    var currBaseValue = INTERVAL_MILLIS * Math.pow(BACKOFF_FACTOR, backoffCount);\r\n    // A random \"fuzz\" to avoid waves of retries.\r\n    // Deviation: randomFactor is required.\r\n    var randomWait = Math.round(\r\n    // A fraction of the backoff value to add/subtract.\r\n    // Deviation: changes multiplication order to improve readability.\r\n    RANDOM_FACTOR *\r\n        currBaseValue *\r\n        // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\r\n        // if we add or subtract.\r\n        (Math.random() - 0.5) *\r\n        2);\r\n    // Limits backoff to max to avoid effectively permanent backoff.\r\n    return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Supports waiting on a backoff by:\r\n *\r\n * <ul>\r\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\r\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\r\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\r\n *       request appear the same.</li>\r\n * </ul>\r\n *\r\n * <p>Visible for testing.\r\n */\r\nfunction setAbortableTimeout(signal, throttleEndTimeMillis) {\r\n    return new Promise(function (resolve, reject) {\r\n        // Derives backoff from given end time, normalizing negative numbers to zero.\r\n        var backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\r\n        var timeout = setTimeout(resolve, backoffMillis);\r\n        // Adds listener, rather than sets onabort, because signal is a shared object.\r\n        signal.addEventListener(function () {\r\n            clearTimeout(timeout);\r\n            // If the request completes before this timeout, the rejection has no effect.\r\n            reject(ERROR_FACTORY.create(\"fetch-throttle\" /* FETCH_THROTTLE */, {\r\n                throttleEndTimeMillis: throttleEndTimeMillis\r\n            }));\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\r\n */\r\nfunction isRetriableError(e) {\r\n    if (!(e instanceof util.FirebaseError)) {\r\n        return false;\r\n    }\r\n    // Uses string index defined by ErrorData, which FirebaseError implements.\r\n    var httpStatus = Number(e['httpStatus']);\r\n    return (httpStatus === 429 ||\r\n        httpStatus === 500 ||\r\n        httpStatus === 503 ||\r\n        httpStatus === 504);\r\n}\r\n/**\r\n * Decorates a Client with retry logic.\r\n *\r\n * <p>Comparable to CachingClient, but uses backoff logic instead of cache max age and doesn't cache\r\n * responses (because the SDK has no use for error responses).\r\n */\r\nvar RetryingClient = /** @class */ (function () {\r\n    function RetryingClient(client, storage) {\r\n        this.client = client;\r\n        this.storage = storage;\r\n    }\r\n    RetryingClient.prototype.fetch = function (request) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var throttleMetadata;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.storage.getThrottleMetadata()];\r\n                    case 1:\r\n                        throttleMetadata = (_a.sent()) || {\r\n                            backoffCount: 0,\r\n                            throttleEndTimeMillis: Date.now()\r\n                        };\r\n                        return [2 /*return*/, this.attemptFetch(request, throttleMetadata)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * A recursive helper for attempting a fetch request repeatedly.\r\n     *\r\n     * @throws any non-retriable errors.\r\n     */\r\n    RetryingClient.prototype.attemptFetch = function (request, _a) {\r\n        var throttleEndTimeMillis = _a.throttleEndTimeMillis, backoffCount = _a.backoffCount;\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var response, e_1, throttleMetadata;\r\n            return tslib.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: \r\n                    // Starts with a (potentially zero) timeout to support resumption from stored state.\r\n                    // Ensures the throttle end time is honored if the last attempt timed out.\r\n                    // Note the SDK will never make a request if the fetch timeout expires at this point.\r\n                    return [4 /*yield*/, setAbortableTimeout(request.signal, throttleEndTimeMillis)];\r\n                    case 1:\r\n                        // Starts with a (potentially zero) timeout to support resumption from stored state.\r\n                        // Ensures the throttle end time is honored if the last attempt timed out.\r\n                        // Note the SDK will never make a request if the fetch timeout expires at this point.\r\n                        _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        _b.trys.push([2, 5, , 7]);\r\n                        return [4 /*yield*/, this.client.fetch(request)];\r\n                    case 3:\r\n                        response = _b.sent();\r\n                        // Note the SDK only clears throttle state if response is success or non-retriable.\r\n                        return [4 /*yield*/, this.storage.deleteThrottleMetadata()];\r\n                    case 4:\r\n                        // Note the SDK only clears throttle state if response is success or non-retriable.\r\n                        _b.sent();\r\n                        return [2 /*return*/, response];\r\n                    case 5:\r\n                        e_1 = _b.sent();\r\n                        if (!isRetriableError(e_1)) {\r\n                            throw e_1;\r\n                        }\r\n                        throttleMetadata = {\r\n                            throttleEndTimeMillis: Date.now() + calculateBackoffMillis(backoffCount),\r\n                            backoffCount: backoffCount + 1\r\n                        };\r\n                        // Persists state.\r\n                        return [4 /*yield*/, this.storage.setThrottleMetadata(throttleMetadata)];\r\n                    case 6:\r\n                        // Persists state.\r\n                        _b.sent();\r\n                        return [2 /*return*/, this.attemptFetch(request, throttleMetadata)];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RetryingClient;\r\n}());\n\nvar name = \"@firebase/remote-config\";\nvar version = \"0.1.25\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerRemoteConfig(firebaseInstance) {\r\n    firebaseInstance.INTERNAL.registerComponent(new component.Component('remoteConfig', remoteConfigFactory, \"PUBLIC\" /* PUBLIC */).setMultipleInstances(true));\r\n    firebaseInstance.registerVersion(name, version);\r\n    function remoteConfigFactory(container, namespace) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        // The following call will always succeed because rc has `import '@firebase/installations'`\r\n        var installations = container.getProvider('installations').getImmediate();\r\n        // Guards against the SDK being used in non-browser environments.\r\n        if (typeof window === 'undefined') {\r\n            throw ERROR_FACTORY.create(\"registration-window\" /* REGISTRATION_WINDOW */);\r\n        }\r\n        // Normalizes optional inputs.\r\n        var _a = app.options, projectId = _a.projectId, apiKey = _a.apiKey, appId = _a.appId;\r\n        if (!projectId) {\r\n            throw ERROR_FACTORY.create(\"registration-project-id\" /* REGISTRATION_PROJECT_ID */);\r\n        }\r\n        if (!apiKey) {\r\n            throw ERROR_FACTORY.create(\"registration-api-key\" /* REGISTRATION_API_KEY */);\r\n        }\r\n        if (!appId) {\r\n            throw ERROR_FACTORY.create(\"registration-app-id\" /* REGISTRATION_APP_ID */);\r\n        }\r\n        namespace = namespace || 'firebase';\r\n        var storage = new Storage(appId, app.name, namespace);\r\n        var storageCache = new StorageCache(storage);\r\n        var logger$1 = new logger.Logger(name);\r\n        // Sets ERROR as the default log level.\r\n        // See RemoteConfig#setLogLevel for corresponding normalization to ERROR log level.\r\n        logger$1.logLevel = logger.LogLevel.ERROR;\r\n        var restClient = new RestClient(installations, \r\n        // Uses the JS SDK version, by which the RC package version can be deduced, if necessary.\r\n        firebaseInstance.SDK_VERSION, namespace, projectId, apiKey, appId);\r\n        var retryingClient = new RetryingClient(restClient, storage);\r\n        var cachingClient = new CachingClient(retryingClient, storage, storageCache, logger$1);\r\n        var remoteConfigInstance = new RemoteConfig(app, cachingClient, storageCache, storage, logger$1);\r\n        // Starts warming cache.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        remoteConfigInstance.ensureInitialized();\r\n        return remoteConfigInstance;\r\n    }\r\n}\r\nregisterRemoteConfig(firebase);\n\nexports.registerRemoteConfig = registerRemoteConfig;\n//# sourceMappingURL=index.cjs.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\nrequire('@firebase/installations');\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\nvar logger$1 = require('@firebase/logger');\nvar component = require('@firebase/component');\n\nvar name = \"@firebase/performance\";\nvar version = \"0.3.9\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SDK_VERSION = version;\r\n/** The prefix for start User Timing marks used for creating Traces. */\r\nvar TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\r\n/** The prefix for stop User Timing marks used for creating Traces. */\r\nvar TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\r\n/** The prefix for User Timing measure used for creating Traces. */\r\nvar TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\r\n/** The prefix for out of the box page load Trace name. */\r\nvar OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\r\nvar FIRST_PAINT_COUNTER_NAME = '_fp';\r\nvar FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\r\nvar FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\r\nvar CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\r\nvar CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\r\nvar SERVICE = 'performance';\r\nvar SERVICE_NAME = 'Performance';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"trace started\" /* TRACE_STARTED_BEFORE */] = 'Trace {$traceName} was started before.',\r\n    _a[\"trace stopped\" /* TRACE_STOPPED_BEFORE */] = 'Trace {$traceName} is not running.',\r\n    _a[\"no window\" /* NO_WINDOW */] = 'Window is not available.',\r\n    _a[\"no app id\" /* NO_APP_ID */] = 'App id is not available.',\r\n    _a[\"no project id\" /* NO_PROJECT_ID */] = 'Project id is not available.',\r\n    _a[\"no api key\" /* NO_API_KEY */] = 'Api key is not available.',\r\n    _a[\"invalid cc log\" /* INVALID_CC_LOG */] = 'Attempted to queue invalid cc event',\r\n    _a[\"FB not default\" /* FB_NOT_DEFAULT */] = 'Performance can only start when Firebase app instance is the default one.',\r\n    _a[\"RC response not ok\" /* RC_NOT_OK */] = 'RC response is not ok',\r\n    _a[\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */] = 'Attribute name {$attributeName} is invalid.',\r\n    _a[\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */] = 'Attribute value {$attributeValue} is invalid.',\r\n    _a[\"invalid custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */] = 'Custom metric name {$customMetricName} is invalid',\r\n    _a[\"invalid String merger input\" /* INVALID_STRING_MERGER_PARAMETER */] = 'Input for String merger is invalid, contact support team to resolve.',\r\n    _a);\r\nvar ERROR_FACTORY = new util.ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar apiInstance;\r\nvar windowInstance;\r\n/**\r\n * This class holds a reference to various browser related objects injected by\r\n * set methods.\r\n */\r\nvar Api = /** @class */ (function () {\r\n    function Api(window) {\r\n        this.window = window;\r\n        if (!window) {\r\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\r\n        }\r\n        this.performance = window.performance;\r\n        this.PerformanceObserver = window.PerformanceObserver;\r\n        this.windowLocation = window.location;\r\n        this.navigator = window.navigator;\r\n        this.document = window.document;\r\n        if (this.navigator && this.navigator.cookieEnabled) {\r\n            // If user blocks cookies on the browser, accessing localStorage will\r\n            // throw an exception.\r\n            this.localStorage = window.localStorage;\r\n        }\r\n        if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\r\n            this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\r\n        }\r\n    }\r\n    Api.prototype.getUrl = function () {\r\n        // Do not capture the string query part of url.\r\n        return this.windowLocation.href.split('?')[0];\r\n    };\r\n    Api.prototype.mark = function (name) {\r\n        if (!this.performance || !this.performance.mark) {\r\n            return;\r\n        }\r\n        this.performance.mark(name);\r\n    };\r\n    Api.prototype.measure = function (measureName, mark1, mark2) {\r\n        if (!this.performance || !this.performance.measure) {\r\n            return;\r\n        }\r\n        this.performance.measure(measureName, mark1, mark2);\r\n    };\r\n    Api.prototype.getEntriesByType = function (type) {\r\n        if (!this.performance || !this.performance.getEntriesByType) {\r\n            return [];\r\n        }\r\n        return this.performance.getEntriesByType(type);\r\n    };\r\n    Api.prototype.getEntriesByName = function (name) {\r\n        if (!this.performance || !this.performance.getEntriesByName) {\r\n            return [];\r\n        }\r\n        return this.performance.getEntriesByName(name);\r\n    };\r\n    Api.prototype.getTimeOrigin = function () {\r\n        // Polyfill the time origin with performance.timing.navigationStart.\r\n        return (this.performance &&\r\n            (this.performance.timeOrigin || this.performance.timing.navigationStart));\r\n    };\r\n    Api.prototype.requiredApisAvailable = function () {\r\n        if (fetch && Promise && this.navigator && this.navigator.cookieEnabled) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Api.prototype.setupObserver = function (entryType, callback) {\r\n        if (!this.PerformanceObserver) {\r\n            return;\r\n        }\r\n        var observer = new this.PerformanceObserver(function (list) {\r\n            for (var _i = 0, _a = list.getEntries(); _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                // `entry` is a PerformanceEntry instance.\r\n                callback(entry);\r\n            }\r\n        });\r\n        // Start observing the entry types you care about.\r\n        observer.observe({ entryTypes: [entryType] });\r\n    };\r\n    Api.getInstance = function () {\r\n        if (apiInstance === undefined) {\r\n            apiInstance = new Api(windowInstance);\r\n        }\r\n        return apiInstance;\r\n    };\r\n    return Api;\r\n}());\r\nfunction setupApi(window) {\r\n    windowInstance = window;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction mergeStrings(part1, part2) {\r\n    var sizeDiff = part1.length - part2.length;\r\n    if (sizeDiff < 0 || sizeDiff > 1) {\r\n        throw ERROR_FACTORY.create(\"invalid String merger input\" /* INVALID_STRING_MERGER_PARAMETER */);\r\n    }\r\n    var resultArray = [];\r\n    for (var i = 0; i < part1.length; i++) {\r\n        resultArray.push(part1.charAt(i));\r\n        if (part2.length > i) {\r\n            resultArray.push(part2.charAt(i));\r\n        }\r\n    }\r\n    return resultArray.join('');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar settingsServiceInstance;\r\nvar SettingsService = /** @class */ (function () {\r\n    function SettingsService() {\r\n        // The variable which controls logging of automatic traces and HTTP/S network monitoring.\r\n        this.instrumentationEnabled = true;\r\n        // The variable which controls logging of custom traces.\r\n        this.dataCollectionEnabled = true;\r\n        // Configuration flags set through remote config.\r\n        this.loggingEnabled = false;\r\n        // Sampling rate between 0 and 1.\r\n        this.tracesSamplingRate = 1;\r\n        this.networkRequestsSamplingRate = 1;\r\n        // Address of logging service.\r\n        this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\r\n        // Performance event transport endpoint URL which should be compatible with proto3.\r\n        // New Address for transport service, not configurable via Remote Config.\r\n        this.flTransportEndpointUrl = mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\r\n        this.transportKey = mergeStrings('AzSC8r6ReiGqFMyfvgow', 'Iayx0u-XT3vksVM-pIV');\r\n        // Source type for performance event logs.\r\n        this.logSource = 462;\r\n        // Flags which control per session logging of traces and network requests.\r\n        this.logTraceAfterSampling = false;\r\n        this.logNetworkAfterSampling = false;\r\n        // TTL of config retrieved from remote config in hours.\r\n        this.configTimeToLive = 12;\r\n    }\r\n    SettingsService.prototype.getAppId = function () {\r\n        var appId = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.appId;\r\n        if (!appId) {\r\n            throw ERROR_FACTORY.create(\"no app id\" /* NO_APP_ID */);\r\n        }\r\n        return appId;\r\n    };\r\n    SettingsService.prototype.getProjectId = function () {\r\n        var projectId = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.projectId;\r\n        if (!projectId) {\r\n            throw ERROR_FACTORY.create(\"no project id\" /* NO_PROJECT_ID */);\r\n        }\r\n        return projectId;\r\n    };\r\n    SettingsService.prototype.getApiKey = function () {\r\n        var apiKey = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.apiKey;\r\n        if (!apiKey) {\r\n            throw ERROR_FACTORY.create(\"no api key\" /* NO_API_KEY */);\r\n        }\r\n        return apiKey;\r\n    };\r\n    SettingsService.prototype.getFlTransportFullUrl = function () {\r\n        return this.flTransportEndpointUrl.concat('?key=', this.transportKey);\r\n    };\r\n    SettingsService.getInstance = function () {\r\n        if (settingsServiceInstance === undefined) {\r\n            settingsServiceInstance = new SettingsService();\r\n        }\r\n        return settingsServiceInstance;\r\n    };\r\n    return SettingsService;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar iid;\r\nfunction getIidPromise() {\r\n    var iidPromise = SettingsService.getInstance().installationsService.getId();\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    iidPromise.then(function (iidVal) {\r\n        iid = iidVal;\r\n    });\r\n    return iidPromise;\r\n}\r\n// This method should be used after the iid is retrieved by getIidPromise method.\r\nfunction getIid() {\r\n    return iid;\r\n}\r\nfunction getAuthTokenPromise() {\r\n    var authTokenPromise = SettingsService.getInstance().installationsService.getToken();\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    authTokenPromise.then(function (authTokenVal) {\r\n    });\r\n    return authTokenPromise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VisibilityState;\r\n(function (VisibilityState) {\r\n    VisibilityState[VisibilityState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n    VisibilityState[VisibilityState[\"VISIBLE\"] = 1] = \"VISIBLE\";\r\n    VisibilityState[VisibilityState[\"HIDDEN\"] = 2] = \"HIDDEN\";\r\n})(VisibilityState || (VisibilityState = {}));\r\nvar RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\r\nvar ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\r\nvar MAX_ATTRIBUTE_NAME_LENGTH = 40;\r\nvar MAX_ATTRIBUTE_VALUE_LENGTH = 100;\r\nfunction getServiceWorkerStatus() {\r\n    var navigator = Api.getInstance().navigator;\r\n    if ('serviceWorker' in navigator) {\r\n        if (navigator.serviceWorker.controller) {\r\n            return 2 /* CONTROLLED */;\r\n        }\r\n        else {\r\n            return 3 /* UNCONTROLLED */;\r\n        }\r\n    }\r\n    else {\r\n        return 1 /* UNSUPPORTED */;\r\n    }\r\n}\r\nfunction getVisibilityState() {\r\n    var document = Api.getInstance().document;\r\n    var visibilityState = document.visibilityState;\r\n    switch (visibilityState) {\r\n        case 'visible':\r\n            return VisibilityState.VISIBLE;\r\n        case 'hidden':\r\n            return VisibilityState.HIDDEN;\r\n        default:\r\n            return VisibilityState.UNKNOWN;\r\n    }\r\n}\r\nfunction getEffectiveConnectionType() {\r\n    var navigator = Api.getInstance().navigator;\r\n    var navigatorConnection = navigator.connection;\r\n    var effectiveType = navigatorConnection && navigatorConnection.effectiveType;\r\n    switch (effectiveType) {\r\n        case 'slow-2g':\r\n            return 1 /* CONNECTION_SLOW_2G */;\r\n        case '2g':\r\n            return 2 /* CONNECTION_2G */;\r\n        case '3g':\r\n            return 3 /* CONNECTION_3G */;\r\n        case '4g':\r\n            return 4 /* CONNECTION_4G */;\r\n        default:\r\n            return 0 /* UNKNOWN */;\r\n    }\r\n}\r\nfunction isValidCustomAttributeName(name) {\r\n    if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\r\n        return false;\r\n    }\r\n    var matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(function (prefix) {\r\n        return name.startsWith(prefix);\r\n    });\r\n    return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\r\n}\r\nfunction isValidCustomAttributeValue(value) {\r\n    return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar consoleLogger = new logger$1.Logger(SERVICE_NAME);\r\nconsoleLogger.logLevel = logger$1.LogLevel.INFO;\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar REMOTE_CONFIG_SDK_VERSION = '0.0.1';\r\n// These values will be used if the remote config object is successfully\r\n// retrieved, but the template does not have these fields.\r\nvar DEFAULT_CONFIGS = {\r\n    loggingEnabled: true\r\n};\r\nvar FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\r\nfunction getConfig(iid) {\r\n    var config = getStoredConfig();\r\n    if (config) {\r\n        processConfig(config);\r\n        return Promise.resolve();\r\n    }\r\n    return getRemoteConfig(iid)\r\n        .then(processConfig)\r\n        .then(function (config) { return storeConfig(config); }, \r\n    /** Do nothing for error, use defaults set in settings service. */\r\n    function () { });\r\n}\r\nfunction getStoredConfig() {\r\n    var localStorage = Api.getInstance().localStorage;\r\n    if (!localStorage) {\r\n        return;\r\n    }\r\n    var expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\r\n    if (!expiryString || !configValid(expiryString)) {\r\n        return;\r\n    }\r\n    var configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\r\n    if (!configStringified) {\r\n        return;\r\n    }\r\n    try {\r\n        var configResponse = JSON.parse(configStringified);\r\n        return configResponse;\r\n    }\r\n    catch (_a) {\r\n        return;\r\n    }\r\n}\r\nfunction storeConfig(config) {\r\n    var localStorage = Api.getInstance().localStorage;\r\n    if (!config || !localStorage) {\r\n        return;\r\n    }\r\n    localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\r\n    localStorage.setItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY, String(Date.now() +\r\n        SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000));\r\n}\r\nvar COULD_NOT_GET_CONFIG_MSG = 'Could not fetch config, will use default configs';\r\nfunction getRemoteConfig(iid) {\r\n    // Perf needs auth token only to retrieve remote config.\r\n    return getAuthTokenPromise()\r\n        .then(function (authToken) {\r\n        var projectId = SettingsService.getInstance().getProjectId();\r\n        var configEndPoint = \"https://firebaseremoteconfig.googleapis.com/v1/projects/\" + projectId + \"/namespaces/fireperf:fetch?key=\" + SettingsService.getInstance().getApiKey();\r\n        var request = new Request(configEndPoint, {\r\n            method: 'POST',\r\n            headers: { Authorization: FIS_AUTH_PREFIX + \" \" + authToken },\r\n            /* eslint-disable camelcase */\r\n            body: JSON.stringify({\r\n                app_instance_id: iid,\r\n                app_instance_id_token: authToken,\r\n                app_id: SettingsService.getInstance().getAppId(),\r\n                app_version: SDK_VERSION,\r\n                sdk_version: REMOTE_CONFIG_SDK_VERSION\r\n            })\r\n            /* eslint-enable camelcase */\r\n        });\r\n        return fetch(request).then(function (response) {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            // In case response is not ok. This will be caught by catch.\r\n            throw ERROR_FACTORY.create(\"RC response not ok\" /* RC_NOT_OK */);\r\n        });\r\n    })\r\n        .catch(function () {\r\n        consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\r\n        return undefined;\r\n    });\r\n}\r\n/**\r\n * Processes config coming either from calling RC or from local storage.\r\n * This method only runs if call is successful or config in storage\r\n * is valid.\r\n */\r\nfunction processConfig(config) {\r\n    if (!config) {\r\n        return config;\r\n    }\r\n    var settingsServiceInstance = SettingsService.getInstance();\r\n    var entries = config.entries || {};\r\n    if (entries.fpr_enabled !== undefined) {\r\n        // TODO: Change the assignment of loggingEnabled once the received type is\r\n        // known.\r\n        settingsServiceInstance.loggingEnabled =\r\n            String(entries.fpr_enabled) === 'true';\r\n    }\r\n    else {\r\n        // Config retrieved successfully, but there is no fpr_enabled in template.\r\n        // Use secondary configs value.\r\n        settingsServiceInstance.loggingEnabled = DEFAULT_CONFIGS.loggingEnabled;\r\n    }\r\n    if (entries.fpr_log_source) {\r\n        settingsServiceInstance.logSource = Number(entries.fpr_log_source);\r\n    }\r\n    if (entries.fpr_log_endpoint_url) {\r\n        settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\r\n    }\r\n    // Key from Remote Config has to be non-empty string, otherwsie use local value.\r\n    if (entries.fpr_log_transport_key) {\r\n        settingsServiceInstance.transportKey = entries.fpr_log_transport_key;\r\n    }\r\n    if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\r\n        settingsServiceInstance.networkRequestsSamplingRate = Number(entries.fpr_vc_network_request_sampling_rate);\r\n    }\r\n    if (entries.fpr_vc_trace_sampling_rate !== undefined) {\r\n        settingsServiceInstance.tracesSamplingRate = Number(entries.fpr_vc_trace_sampling_rate);\r\n    }\r\n    // Set the per session trace and network logging flags.\r\n    settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(settingsServiceInstance.tracesSamplingRate);\r\n    settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(settingsServiceInstance.networkRequestsSamplingRate);\r\n    return config;\r\n}\r\nfunction configValid(expiry) {\r\n    return Number(expiry) > Date.now();\r\n}\r\nfunction shouldLogAfterSampling(samplingRate) {\r\n    return Math.random() <= samplingRate;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar initializationStatus = 1 /* notInitialized */;\r\nvar initializationPromise;\r\nfunction getInitializationPromise() {\r\n    initializationStatus = 2 /* initializationPending */;\r\n    initializationPromise = initializationPromise || initializePerf();\r\n    return initializationPromise;\r\n}\r\nfunction isPerfInitialized() {\r\n    return initializationStatus === 3 /* initialized */;\r\n}\r\nfunction initializePerf() {\r\n    return getDocumentReadyComplete()\r\n        .then(function () { return getIidPromise(); })\r\n        .then(function (iid) { return getConfig(iid); })\r\n        .then(function () { return changeInitializationStatus(); }, function () { return changeInitializationStatus(); });\r\n}\r\n/**\r\n * Returns a promise which resolves whenever the document readystate is complete or\r\n * immediately if it is called after page load complete.\r\n */\r\nfunction getDocumentReadyComplete() {\r\n    var document = Api.getInstance().document;\r\n    return new Promise(function (resolve) {\r\n        if (document && document.readyState !== 'complete') {\r\n            var handler_1 = function () {\r\n                if (document.readyState === 'complete') {\r\n                    document.removeEventListener('readystatechange', handler_1);\r\n                    resolve();\r\n                }\r\n            };\r\n            document.addEventListener('readystatechange', handler_1);\r\n        }\r\n        else {\r\n            resolve();\r\n        }\r\n    });\r\n}\r\nfunction changeInitializationStatus() {\r\n    initializationStatus = 3 /* initialized */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\r\nvar INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\r\n// If end point does not work, the call will be tried for these many times.\r\nvar DEFAULT_REMAINING_TRIES = 3;\r\nvar remainingTries = DEFAULT_REMAINING_TRIES;\r\n/* eslint-enable camelcase */\r\nvar queue = [];\r\nvar isTransportSetup = false;\r\nfunction setupTransportService() {\r\n    if (!isTransportSetup) {\r\n        processQueue(INITIAL_SEND_TIME_DELAY_MS);\r\n        isTransportSetup = true;\r\n    }\r\n}\r\nfunction processQueue(timeOffset) {\r\n    setTimeout(function () {\r\n        // If there is no remainingTries left, stop retrying.\r\n        if (remainingTries === 0) {\r\n            return;\r\n        }\r\n        // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\r\n        if (!queue.length) {\r\n            return processQueue(DEFAULT_SEND_INTERVAL_MS);\r\n        }\r\n        dispatchQueueEvents();\r\n    }, timeOffset);\r\n}\r\nfunction dispatchQueueEvents() {\r\n    // Capture a snapshot of the queue and empty the \"official queue\".\r\n    var staged = tslib.__spreadArrays(queue);\r\n    queue = [];\r\n    /* eslint-disable camelcase */\r\n    // We will pass the JSON serialized event to the backend.\r\n    var log_event = staged.map(function (evt) { return ({\r\n        source_extension_json_proto3: evt.message,\r\n        event_time_ms: String(evt.eventTime)\r\n    }); });\r\n    var data = {\r\n        request_time_ms: String(Date.now()),\r\n        client_info: {\r\n            client_type: 1,\r\n            js_client_info: {}\r\n        },\r\n        log_source: SettingsService.getInstance().logSource,\r\n        log_event: log_event\r\n    };\r\n    /* eslint-enable camelcase */\r\n    sendEventsToFl(data, staged).catch(function () {\r\n        // If the request fails for some reason, add the events that were attempted\r\n        // back to the primary queue to retry later.\r\n        queue = tslib.__spreadArrays(staged, queue);\r\n        remainingTries--;\r\n        consoleLogger.info(\"Tries left: \" + remainingTries + \".\");\r\n        processQueue(DEFAULT_SEND_INTERVAL_MS);\r\n    });\r\n}\r\nfunction sendEventsToFl(data, staged) {\r\n    return postToFlEndpoint(data)\r\n        .then(function (res) {\r\n        if (!res.ok) {\r\n            consoleLogger.info('Call to Firebase backend failed.');\r\n        }\r\n        return res.json();\r\n    })\r\n        .then(function (res) {\r\n        // Find the next call wait time from the response.\r\n        var transportWait = Number(res.nextRequestWaitMillis);\r\n        var requestOffset = DEFAULT_SEND_INTERVAL_MS;\r\n        if (!isNaN(transportWait)) {\r\n            requestOffset = Math.max(transportWait, requestOffset);\r\n        }\r\n        // Delete request if response include RESPONSE_ACTION_UNKNOWN or DELETE_REQUEST action.\r\n        // Otherwise, retry request using normal scheduling if response include RETRY_REQUEST_LATER.\r\n        var logResponseDetails = res.logResponseDetails;\r\n        if (Array.isArray(logResponseDetails) &&\r\n            logResponseDetails.length > 0 &&\r\n            logResponseDetails[0].responseAction === 'RETRY_REQUEST_LATER') {\r\n            queue = tslib.__spreadArrays(staged, queue);\r\n            consoleLogger.info(\"Retry transport request later.\");\r\n        }\r\n        remainingTries = DEFAULT_REMAINING_TRIES;\r\n        // Schedule the next process.\r\n        processQueue(requestOffset);\r\n    });\r\n}\r\nfunction postToFlEndpoint(data) {\r\n    var flTransportFullUrl = SettingsService.getInstance().getFlTransportFullUrl();\r\n    return fetch(flTransportFullUrl, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data)\r\n    });\r\n}\r\nfunction addToQueue(evt) {\r\n    if (!evt.eventTime || !evt.message) {\r\n        throw ERROR_FACTORY.create(\"invalid cc log\" /* INVALID_CC_LOG */);\r\n    }\r\n    // Add the new event to the queue.\r\n    queue = tslib.__spreadArrays(queue, [evt]);\r\n}\r\n/** Log handler for cc service to send the performance logs to the server. */\r\nfunction transportHandler(\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nserializer) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        var message = serializer.apply(void 0, args);\r\n        addToQueue({\r\n            message: message,\r\n            eventTime: Date.now()\r\n        });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-enble camelcase */\r\nvar logger;\r\n// This method is not called before initialization.\r\nfunction sendLog(resource, resourceType) {\r\n    if (!logger) {\r\n        logger = transportHandler(serializer);\r\n    }\r\n    logger(resource, resourceType);\r\n}\r\nfunction logTrace(trace) {\r\n    var settingsService = SettingsService.getInstance();\r\n    // Do not log if trace is auto generated and instrumentation is disabled.\r\n    if (!settingsService.instrumentationEnabled && trace.isAuto) {\r\n        return;\r\n    }\r\n    // Do not log if trace is custom and data collection is disabled.\r\n    if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\r\n        return;\r\n    }\r\n    // Do not log if required apis are not available.\r\n    if (!Api.getInstance().requiredApisAvailable()) {\r\n        return;\r\n    }\r\n    // Only log the page load auto traces if page is visible.\r\n    if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\r\n        return;\r\n    }\r\n    if (!settingsService.loggingEnabled ||\r\n        !settingsService.logTraceAfterSampling) {\r\n        return;\r\n    }\r\n    if (isPerfInitialized()) {\r\n        sendTraceLog(trace);\r\n    }\r\n    else {\r\n        // Custom traces can be used before the initialization but logging\r\n        // should wait until after.\r\n        getInitializationPromise().then(function () { return sendTraceLog(trace); }, function () { return sendTraceLog(trace); });\r\n    }\r\n}\r\nfunction sendTraceLog(trace) {\r\n    if (getIid()) {\r\n        setTimeout(function () { return sendLog(trace, 1 /* Trace */); }, 0);\r\n    }\r\n}\r\nfunction logNetworkRequest(networkRequest) {\r\n    var settingsService = SettingsService.getInstance();\r\n    // Do not log network requests if instrumentation is disabled.\r\n    if (!settingsService.instrumentationEnabled) {\r\n        return;\r\n    }\r\n    // Do not log the js sdk's call to transport service domain to avoid unnecessary cycle.\r\n    // Need to blacklist both old and new endpoints to avoid migration gap.\r\n    var networkRequestUrl = networkRequest.url;\r\n    // Blacklist old log endpoint and new transport endpoint.\r\n    // Because Performance SDK doesn't instrument requests sent from SDK itself.\r\n    var logEndpointUrl = settingsService.logEndPointUrl.split('?')[0];\r\n    var flEndpointUrl = settingsService.flTransportEndpointUrl.split('?')[0];\r\n    if (networkRequestUrl === logEndpointUrl ||\r\n        networkRequestUrl === flEndpointUrl) {\r\n        return;\r\n    }\r\n    if (!settingsService.loggingEnabled ||\r\n        !settingsService.logNetworkAfterSampling) {\r\n        return;\r\n    }\r\n    setTimeout(function () { return sendLog(networkRequest, 0 /* NetworkRequest */); }, 0);\r\n}\r\nfunction serializer(resource, resourceType) {\r\n    if (resourceType === 0 /* NetworkRequest */) {\r\n        return serializeNetworkRequest(resource);\r\n    }\r\n    return serializeTrace(resource);\r\n}\r\nfunction serializeNetworkRequest(networkRequest) {\r\n    var networkRequestMetric = {\r\n        url: networkRequest.url,\r\n        http_method: networkRequest.httpMethod || 0,\r\n        http_response_code: 200,\r\n        response_payload_bytes: networkRequest.responsePayloadBytes,\r\n        client_start_time_us: networkRequest.startTimeUs,\r\n        time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\r\n        time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\r\n    };\r\n    var perfMetric = {\r\n        application_info: getApplicationInfo(),\r\n        network_request_metric: networkRequestMetric\r\n    };\r\n    return JSON.stringify(perfMetric);\r\n}\r\nfunction serializeTrace(trace) {\r\n    var traceMetric = {\r\n        name: trace.name,\r\n        is_auto: trace.isAuto,\r\n        client_start_time_us: trace.startTimeUs,\r\n        duration_us: trace.durationUs\r\n    };\r\n    if (Object.keys(trace.counters).length !== 0) {\r\n        traceMetric.counters = trace.counters;\r\n    }\r\n    var customAttributes = trace.getAttributes();\r\n    if (Object.keys(customAttributes).length !== 0) {\r\n        traceMetric.custom_attributes = customAttributes;\r\n    }\r\n    var perfMetric = {\r\n        application_info: getApplicationInfo(),\r\n        trace_metric: traceMetric\r\n    };\r\n    return JSON.stringify(perfMetric);\r\n}\r\nfunction getApplicationInfo() {\r\n    return {\r\n        google_app_id: SettingsService.getInstance().getAppId(),\r\n        app_instance_id: getIid(),\r\n        web_app_info: {\r\n            sdk_version: SDK_VERSION,\r\n            page_url: Api.getInstance().getUrl(),\r\n            service_worker_status: getServiceWorkerStatus(),\r\n            visibility_state: getVisibilityState(),\r\n            effective_connection_type: getEffectiveConnectionType()\r\n        },\r\n        application_process_state: 0\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_METRIC_NAME_LENGTH = 100;\r\nvar RESERVED_AUTO_PREFIX = '_';\r\nvar oobMetrics = [\r\n    FIRST_PAINT_COUNTER_NAME,\r\n    FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\r\n    FIRST_INPUT_DELAY_COUNTER_NAME\r\n];\r\n/**\r\n * Returns true if the metric is custom and does not start with reserved prefix, or if\r\n * the metric is one of out of the box page load trace metrics.\r\n */\r\nfunction isValidMetricName(name, traceName) {\r\n    if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\r\n        return false;\r\n    }\r\n    return ((traceName &&\r\n        traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) &&\r\n        oobMetrics.indexOf(name) > -1) ||\r\n        !name.startsWith(RESERVED_AUTO_PREFIX));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Trace = /** @class */ (function () {\r\n    /**\r\n     * @param name The name of the trace.\r\n     * @param isAuto If the trace is auto-instrumented.\r\n     * @param traceMeasureName The name of the measure marker in user timing specification. This field\r\n     * is only set when the trace is built for logging when the user directly uses the user timing\r\n     * api (performance.mark and performance.measure).\r\n     */\r\n    function Trace(name, isAuto, traceMeasureName) {\r\n        if (isAuto === void 0) { isAuto = false; }\r\n        this.name = name;\r\n        this.isAuto = isAuto;\r\n        this.state = 1 /* UNINITIALIZED */;\r\n        this.customAttributes = {};\r\n        this.counters = {};\r\n        this.api = Api.getInstance();\r\n        this.randomId = Math.floor(Math.random() * 1000000);\r\n        if (!this.isAuto) {\r\n            this.traceStartMark = TRACE_START_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            this.traceStopMark = TRACE_STOP_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            this.traceMeasure =\r\n                traceMeasureName ||\r\n                    TRACE_MEASURE_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            if (traceMeasureName) {\r\n                // For the case of direct user timing traces, no start stop will happen. The measure object\r\n                // is already available.\r\n                this.calculateTraceMetrics();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Starts a trace. The measurement of the duration starts at this point.\r\n     */\r\n    Trace.prototype.start = function () {\r\n        if (this.state !== 1 /* UNINITIALIZED */) {\r\n            throw ERROR_FACTORY.create(\"trace started\" /* TRACE_STARTED_BEFORE */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.api.mark(this.traceStartMark);\r\n        this.state = 2 /* RUNNING */;\r\n    };\r\n    /**\r\n     * Stops the trace. The measurement of the duration of the trace stops at this point and trace\r\n     * is logged.\r\n     */\r\n    Trace.prototype.stop = function () {\r\n        if (this.state !== 2 /* RUNNING */) {\r\n            throw ERROR_FACTORY.create(\"trace stopped\" /* TRACE_STOPPED_BEFORE */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.state = 3 /* TERMINATED */;\r\n        this.api.mark(this.traceStopMark);\r\n        this.api.measure(this.traceMeasure, this.traceStartMark, this.traceStopMark);\r\n        this.calculateTraceMetrics();\r\n        logTrace(this);\r\n    };\r\n    /**\r\n     * Records a trace with predetermined values. If this method is used a trace is created and logged\r\n     * directly. No need to use start and stop methods.\r\n     * @param startTime Trace start time since epoch in millisec\r\n     * @param duration The duraction of the trace in millisec\r\n     * @param options An object which can optionally hold maps of custom metrics and custom attributes\r\n     */\r\n    Trace.prototype.record = function (startTime, duration, options) {\r\n        this.durationUs = Math.floor(duration * 1000);\r\n        this.startTimeUs = Math.floor(startTime * 1000);\r\n        if (options && options.attributes) {\r\n            this.customAttributes = tslib.__assign({}, options.attributes);\r\n        }\r\n        if (options && options.metrics) {\r\n            for (var _i = 0, _a = Object.keys(options.metrics); _i < _a.length; _i++) {\r\n                var metric = _a[_i];\r\n                if (!isNaN(Number(options.metrics[metric]))) {\r\n                    this.counters[metric] = Number(Math.floor(options.metrics[metric]));\r\n                }\r\n            }\r\n        }\r\n        logTrace(this);\r\n    };\r\n    /**\r\n     * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\r\n     * custom metric if one with the given name does not exist.\r\n     * @param counter Name of the custom metric\r\n     * @param num Increment by value\r\n     */\r\n    Trace.prototype.incrementMetric = function (counter, num) {\r\n        if (num === void 0) { num = 1; }\r\n        if (this.counters[counter] === undefined) {\r\n            this.putMetric(counter, 0);\r\n        }\r\n        this.counters[counter] += num;\r\n    };\r\n    /**\r\n     * Sets a custom metric to a specified value. Will create a new custom metric if one with the\r\n     * given name does not exist.\r\n     * @param counter Name of the custom metric\r\n     * @param num Set custom metric to this value\r\n     */\r\n    Trace.prototype.putMetric = function (counter, num) {\r\n        if (isValidMetricName(counter, this.name)) {\r\n            this.counters[counter] = num;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"invalid custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */, {\r\n                customMetricName: counter\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Returns the value of the custom metric by that name. If a custom metric with that name does\r\n     * not exist will return zero.\r\n     * @param counter\r\n     */\r\n    Trace.prototype.getMetric = function (counter) {\r\n        return this.counters[counter] || 0;\r\n    };\r\n    /**\r\n     * Sets a custom attribute of a trace to a certain value.\r\n     * @param attr\r\n     * @param value\r\n     */\r\n    Trace.prototype.putAttribute = function (attr, value) {\r\n        var isValidName = isValidCustomAttributeName(attr);\r\n        var isValidValue = isValidCustomAttributeValue(value);\r\n        if (isValidName && isValidValue) {\r\n            this.customAttributes[attr] = value;\r\n            return;\r\n        }\r\n        // Throw appropriate error when the attribute name or value is invalid.\r\n        if (!isValidName) {\r\n            throw ERROR_FACTORY.create(\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */, {\r\n                attributeName: attr\r\n            });\r\n        }\r\n        if (!isValidValue) {\r\n            throw ERROR_FACTORY.create(\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */, {\r\n                attributeValue: value\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Retrieves the value a custom attribute of a trace is set to.\r\n     * @param attr\r\n     */\r\n    Trace.prototype.getAttribute = function (attr) {\r\n        return this.customAttributes[attr];\r\n    };\r\n    Trace.prototype.removeAttribute = function (attr) {\r\n        if (this.customAttributes[attr] === undefined) {\r\n            return;\r\n        }\r\n        delete this.customAttributes[attr];\r\n    };\r\n    Trace.prototype.getAttributes = function () {\r\n        return tslib.__assign({}, this.customAttributes);\r\n    };\r\n    Trace.prototype.setStartTime = function (startTime) {\r\n        this.startTimeUs = startTime;\r\n    };\r\n    Trace.prototype.setDuration = function (duration) {\r\n        this.durationUs = duration;\r\n    };\r\n    /**\r\n     * Calculates and assigns the duration and start time of the trace using the measure performance\r\n     * entry.\r\n     */\r\n    Trace.prototype.calculateTraceMetrics = function () {\r\n        var perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\r\n        var perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\r\n        if (perfMeasureEntry) {\r\n            this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\r\n            this.startTimeUs = Math.floor((perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000);\r\n        }\r\n    };\r\n    /**\r\n     * @param navigationTimings A single element array which contains the navigationTIming object of\r\n     * the page load\r\n     * @param paintTimings A array which contains paintTiming object of the page load\r\n     * @param firstInputDelay First input delay in millisec\r\n     */\r\n    Trace.createOobTrace = function (navigationTimings, paintTimings, firstInputDelay) {\r\n        var route = Api.getInstance().getUrl();\r\n        if (!route) {\r\n            return;\r\n        }\r\n        var trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\r\n        var timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\r\n        trace.setStartTime(timeOriginUs);\r\n        // navigationTimings includes only one element.\r\n        if (navigationTimings && navigationTimings[0]) {\r\n            trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\r\n            trace.putMetric('domInteractive', Math.floor(navigationTimings[0].domInteractive * 1000));\r\n            trace.putMetric('domContentLoadedEventEnd', Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000));\r\n            trace.putMetric('loadEventEnd', Math.floor(navigationTimings[0].loadEventEnd * 1000));\r\n        }\r\n        var FIRST_PAINT = 'first-paint';\r\n        var FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\r\n        if (paintTimings) {\r\n            var firstPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_PAINT; });\r\n            if (firstPaint && firstPaint.startTime) {\r\n                trace.putMetric(FIRST_PAINT_COUNTER_NAME, Math.floor(firstPaint.startTime * 1000));\r\n            }\r\n            var firstContentfulPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_CONTENTFUL_PAINT; });\r\n            if (firstContentfulPaint && firstContentfulPaint.startTime) {\r\n                trace.putMetric(FIRST_CONTENTFUL_PAINT_COUNTER_NAME, Math.floor(firstContentfulPaint.startTime * 1000));\r\n            }\r\n            if (firstInputDelay) {\r\n                trace.putMetric(FIRST_INPUT_DELAY_COUNTER_NAME, Math.floor(firstInputDelay * 1000));\r\n            }\r\n        }\r\n        logTrace(trace);\r\n    };\r\n    Trace.createUserTimingTrace = function (measureName) {\r\n        var trace = new Trace(measureName, false, measureName);\r\n        logTrace(trace);\r\n    };\r\n    return Trace;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createNetworkRequestEntry(entry) {\r\n    var performanceEntry = entry;\r\n    if (!performanceEntry || performanceEntry.responseStart === undefined) {\r\n        return;\r\n    }\r\n    var timeOrigin = Api.getInstance().getTimeOrigin();\r\n    var startTimeUs = Math.floor((performanceEntry.startTime + timeOrigin) * 1000);\r\n    var timeToResponseInitiatedUs = performanceEntry.responseStart\r\n        ? Math.floor((performanceEntry.responseStart - performanceEntry.startTime) * 1000)\r\n        : undefined;\r\n    var timeToResponseCompletedUs = Math.floor((performanceEntry.responseEnd - performanceEntry.startTime) * 1000);\r\n    // Remove the query params from logged network request url.\r\n    var url = performanceEntry.name && performanceEntry.name.split('?')[0];\r\n    var networkRequest = {\r\n        url: url,\r\n        responsePayloadBytes: performanceEntry.transferSize,\r\n        startTimeUs: startTimeUs,\r\n        timeToResponseInitiatedUs: timeToResponseInitiatedUs,\r\n        timeToResponseCompletedUs: timeToResponseCompletedUs\r\n    };\r\n    logNetworkRequest(networkRequest);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FID_WAIT_TIME_MS = 5000;\r\nfunction setupOobResources() {\r\n    // Do not initialize unless iid is available.\r\n    if (!getIid()) {\r\n        return;\r\n    }\r\n    // The load event might not have fired yet, and that means performance navigation timing\r\n    // object has a duration of 0. The setup should run after all current tasks in js queue.\r\n    setTimeout(function () { return setupOobTraces(); }, 0);\r\n    setTimeout(function () { return setupNetworkRequests(); }, 0);\r\n    setTimeout(function () { return setupUserTimingTraces(); }, 0);\r\n}\r\nfunction setupNetworkRequests() {\r\n    var api = Api.getInstance();\r\n    var resources = api.getEntriesByType('resource');\r\n    for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\r\n        var resource = resources_1[_i];\r\n        createNetworkRequestEntry(resource);\r\n    }\r\n    api.setupObserver('resource', createNetworkRequestEntry);\r\n}\r\nfunction setupOobTraces() {\r\n    var api = Api.getInstance();\r\n    var navigationTimings = api.getEntriesByType('navigation');\r\n    var paintTimings = api.getEntriesByType('paint');\r\n    // If First Input Desly polyfill is added to the page, report the fid value.\r\n    // https://github.com/GoogleChromeLabs/first-input-delay\r\n    if (api.onFirstInputDelay) {\r\n        // If the fid call back is not called for certain time, continue without it.\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        var timeoutId_1 = setTimeout(function () {\r\n            Trace.createOobTrace(navigationTimings, paintTimings);\r\n            timeoutId_1 = undefined;\r\n        }, FID_WAIT_TIME_MS);\r\n        api.onFirstInputDelay(function (fid) {\r\n            if (timeoutId_1) {\r\n                clearTimeout(timeoutId_1);\r\n                Trace.createOobTrace(navigationTimings, paintTimings, fid);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        Trace.createOobTrace(navigationTimings, paintTimings);\r\n    }\r\n}\r\nfunction setupUserTimingTraces() {\r\n    var api = Api.getInstance();\r\n    // Run through the measure performance entries collected up to this point.\r\n    var measures = api.getEntriesByType('measure');\r\n    for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\r\n        var measure = measures_1[_i];\r\n        createUserTimingTrace(measure);\r\n    }\r\n    // Setup an observer to capture the measures from this point on.\r\n    api.setupObserver('measure', createUserTimingTrace);\r\n}\r\nfunction createUserTimingTrace(measure) {\r\n    var measureName = measure.name;\r\n    // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\r\n    if (measureName.substring(0, TRACE_MEASURE_PREFIX.length) ===\r\n        TRACE_MEASURE_PREFIX) {\r\n        return;\r\n    }\r\n    Trace.createUserTimingTrace(measureName);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PerformanceController = /** @class */ (function () {\r\n    function PerformanceController(app) {\r\n        this.app = app;\r\n        if (Api.getInstance().requiredApisAvailable()) {\r\n            setupTransportService();\r\n            getInitializationPromise().then(setupOobResources, setupOobResources);\r\n        }\r\n        else {\r\n            consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\r\n        }\r\n    }\r\n    PerformanceController.prototype.trace = function (name) {\r\n        return new Trace(name);\r\n    };\r\n    Object.defineProperty(PerformanceController.prototype, \"instrumentationEnabled\", {\r\n        get: function () {\r\n            return SettingsService.getInstance().instrumentationEnabled;\r\n        },\r\n        set: function (val) {\r\n            SettingsService.getInstance().instrumentationEnabled = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PerformanceController.prototype, \"dataCollectionEnabled\", {\r\n        get: function () {\r\n            return SettingsService.getInstance().dataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            SettingsService.getInstance().dataCollectionEnabled = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return PerformanceController;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nfunction registerPerformance(instance) {\r\n    var factoryMethod = function (app, installations) {\r\n        if (app.name !== DEFAULT_ENTRY_NAME) {\r\n            throw ERROR_FACTORY.create(\"FB not default\" /* FB_NOT_DEFAULT */);\r\n        }\r\n        if (typeof window === 'undefined') {\r\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\r\n        }\r\n        setupApi(window);\r\n        SettingsService.getInstance().firebaseAppInstance = app;\r\n        SettingsService.getInstance().installationsService = installations;\r\n        return new PerformanceController(app);\r\n    };\r\n    // Register performance with firebase-app.\r\n    instance.INTERNAL.registerComponent(new component.Component('performance', function (container) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        // The following call will always succeed because perf has `import '@firebase/installations'`\r\n        var installations = container\r\n            .getProvider('installations')\r\n            .getImmediate();\r\n        return factoryMethod(app, installations);\r\n    }, \"PUBLIC\" /* PUBLIC */));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterPerformance(firebase);\n\nexports.registerPerformance = registerPerformance;\n//# sourceMappingURL=index.cjs.js.map\n","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\nrequire('@firebase/auth');\nrequire('@firebase/database');\nrequire('@firebase/firestore');\nrequire('@firebase/functions');\nrequire('@firebase/messaging');\nrequire('@firebase/storage');\nrequire('@firebase/performance');\nrequire('@firebase/analytics');\nrequire('@firebase/remote-config');\n\nvar name = \"firebase\";\nvar version = \"7.16.1\";\n\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfirebase.registerVersion(name, version, 'app');\n\nvar name$1 = \"firebase\";\nvar version$1 = \"7.16.1\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconsole.warn(\"\\nIt looks like you're using the development build of the Firebase JS SDK.\\nWhen deploying Firebase apps to production, it is advisable to only import\\nthe individual SDK components you intend to use.\\n\\nFor the module builds, these are available in the following manner\\n(replace <PACKAGE> with the name of a component - i.e. auth, database, etc):\\n\\nCommonJS Modules:\\nconst firebase = require('firebase/app');\\nrequire('firebase/<PACKAGE>');\\n\\nES Modules:\\nimport firebase from 'firebase/app';\\nimport 'firebase/<PACKAGE>';\\n\\nTypescript:\\nimport * as firebase from 'firebase/app';\\nimport 'firebase/<PACKAGE>';\\n\");\r\nfirebase.registerVersion(name$1, version$1);\n\nmodule.exports = firebase;\n//# sourceMappingURL=index.cjs.js.map\n"],"sourceRoot":""}